import express from 'express';
import dotenv from 'dotenv';
import { GoogleGenerativeAI } from '@google/generative-ai';

dotenv.config(); // Load .env

const router = express.Router();

// Initialize Google Generative AI
const genAI = new GoogleGenerativeAI(process.env.GEMINI_API_KEY);
const TOPIC_GENERATION_MODEL = 'gemini-2.0-flash';

console.log(`Using GEMINI_API_KEY: ${process.env.GEMINI_API_KEY ? 'Loaded' : 'Not Loaded'}`);

function getRandomFloat(min, max) {
    return Math.random() * (max - min) + min;
}

router.post('/', async (req, res) => {
    const { interest } = req.body;
    if (!interest) {
        return res.status(400).json({ error: 'Interest is required' });
    }

    const model = genAI.getGenerativeModel({ model: TOPIC_GENERATION_MODEL });

    const messages = [
        {
            role: "user",
            parts: [{ text: `You are an assistant that quickly generates only one clear, short, controversial, unique (each time) debate topic. Respond ONLY with the topic sentence, and do NOT explain, elaborate, or provide a title. Generate one controversial, unique debate topic related to "${interest}". Respond ONLY with the topic itself. Do not include "Debate Topic:", "Sure", "Title:", or any extra text.` }]
        }
    ];

    try {
        let temp = getRandomFloat(0.4, 0.7);
        console.log(`Temperature: ${temp}`);

        const result = await model.generateContent({
            contents: messages,
            generationConfig: {
                maxOutputTokens: 50, // Corresponds to max_new_tokens
                temperature: temp,
            },
        });

        const response = result.response;
        const topic = response.text().trim();
        console.log(`Generated Topic: ${topic}`);

        if (topic) {
            // Further cleaning might be needed if the model still adds prefixes,
            // but the prompt should ideally prevent it.
            const cleanedTopic = topic.replace(/^(Sure, here's a debate topic: |Here's a debate topic related to .*?: |Debate Topic: )/i, '').trim();
            res.json({ topic: cleanedTopic });
        } else {
            res.status(500).json({ error: 'No topic generated by the AI.' });
        }

    } catch (err) {
        console.error('Error generating topic:', err);
        res.status(500).json({ error: 'Topic generation failed', details: err.message || 'Unknown error' });
    }
});

export default router;

